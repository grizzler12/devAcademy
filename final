#!/bin/bash

# A script that will assure apache server is running and site is accesible
# author: Alexandru Salajan

# Am pus scriptul in cronjobs astfel : 
#   */2 08-18 * * * /home/grizzly/bin/final


err=0
count=0


# check if httpd service is running
ProcessCheck () {

	service="httpd"
	command=$(ps -ef | grep -v grep | grep $service | wc -l)

	if [[  $command -gt 0 ]]; then 
		echo "$service is running"
	else 
		echo "$service is down"
		echo "Service httpd is down. We will atempt a restart of the service." | mail -s "Service httpd is down" grizzly@devacademy.ro
		err=$((err+1))
	fi
}

# check if apache is listening on port 80   
Port () {

	command2=$(netstat -ln | grep -E ':80' | wc -l)
	
	if [[ $command2 -gt 0 ]]; then 
		echo "Apache server is listening on port 80"
	else 
		echo "Apache server is not listening on port 80"
		echo "Apache is not listening on port 80. We will atempt a restart of the httpd service." | mail -s "Apache is not listening on port 80" grizzly@devacademy.ro
		err=$((err+1))
	fi 
 
}

# check if url status is 200
UrlCode () {

	command3=$(curl -o /dev/null --silent --head --write-out '%{http_code}\n' http://192.168.122.1/phpinfo.php)


	if [[ $command3 -eq 200 ]]; then 
		echo "Site is up and running"
	else 
		echo "site is down"
		echo "The page is unreachable. We will atempt a restart of the httpd service." | mail -s "The page is unreachable" grizzly@devacademy.ro
		err=$((err+1))
	fi  

}

# check if word devacademy is present on the webpage
Word () {


command4=$(curl http://192.168.122.1/phpinfo.php --silent | grep devacademy | wc -l )

if [[ $command4 -gt 0 ]]; then 
	echo "We found $command4 matches"
else 
	echo "No match"
	echo "We will atempt a restart of the httpd service." | mail -s "Can't find a match" grizzly@devacademy.ro
		err=$((err+1))
fi 
}

#main function 
Main () {
	ProcessCheck>>/home/grizzly/bin/process.txt
	Port>>/home/grizzly/bin/port.txt
	UrlCode>>/home/grizzly/bin/url.txt
	Word>>/home/grizzly/bin/word.txt
	
	if [[ $err -gt 0 ]]; then 
		systemctl restart httpd
		count=$((count+1))
		
	else 
		ProcessCheck>>/home/grizzly/bin/process.txt
		Port>>/home/grizzly/bin/port.txt
		UrlCode>>/home/grizzly/bin/url.txt
		Word>>/home/grizzly/bin/word.txt
		exit 0
		
	fi
}

# if the script was checked 5 times and still has an error sends mail 
while [[ $count -lt 5 ]];do 
	Main
done
while [[ $count -gt 4 ]]; do 
	echo "eroare">>fatal.txt
	echo "After 5 service restarts error still persist." | mail -s "Fatal error" root@devacademy.ro
	exit 1
	
done


